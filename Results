# PREGUNTAS
Pregunta 1: MANIPULACIÓN DE DATOS [4 PUNTOS]**

1.1 Defina su directorio de trabajo. 
setwd('C:/Users/Vanesa/Downloads/GBI6_ExamenFinal')

1.2. Cargue la data "mRNA_expr.csv"
library(readr)
df <- read_csv("mRNA_expr.csv")

1.3 Cree una función de nombre ```long_df``` para transformar la data ```df``` de la forma wide a long.
 long_df <- function(df) {
  library(tidyr)
  library(dplyr)
  df$dataset <- as.factor(df$dataset)
  df_l <- gather(df, gen, expresion_level, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH, factor_key=TRUE)
  df_l2 <- select(df_l, -bcr_patient_barcode)
  return (df_l2)
}

Genere la data ```df_long``` utilizandola función ```long_df```. 
La tabla resultante tendrá tres columnas: ```dataset, gen, expresion_level```.  

df_long <- long_df(df)
prueba <- df_long %>% group_by(gen)


1.5 A partir de la data ```df_long```, genere un **Descriptive table** (librería ```sjPlot```) y guárdelo en el subdirectorio "result"  con el nombre **mRNA_expr_summary.doc** (previamente debe seleccionar las celdas adecuadas con funciones de la librería ```dplyr``` en conjunto con el operador ```%>%```). 

library(sjPlot)
library(sjmisc)


cancer_mama <- prueba %>% group_by(gen) %>% mutate(row = row_number()) %>%
  tidyr::pivot_wider(names_from = gen, values_from = expresion_level) %>%
  select(-row)

descr(cancer_mama) %>% tab_df(title = "Estadistica descriptiva del cancer de MAMA y su nivel de expresion de los diferentes genes",
                              file = "mRNA_expr_summary.doc") 
                              


Pregunta 2 VISUALIZACION DE DATOS  

Para esta pregunta tiene que utilizar la data ```df_long```. 

 2.1 Cree la funcion ```tcga_boxplots``` para visualizar boxplots y jitterplots. El único parámetro de la función es ```dataset```. La función debe crear un boxplot de los niveles de expresión para cada gen.

library(ggplot2)

tcga_boxplots <- function(dataset) {
  library(ggplot2)
  return(ggplot (dataset, aes(x = gen, y = expresion_level, col = gen)) + labs(x="Gen", y = "Expression level")
         + geom_boxplot() + geom_jitter(size=0.10))}
tcga_boxplots(df_long)

                              
2.2 Utilizando la función ```lapply()``` genera la lista ```cancertype_boxplots``` con las gráficas para cada tipo de cancer (cada tipo de dataset). 

cancertype <- list(
  BRCA <- filter(df_long, dataset == "BRCA"),
  OV <- filter(df_long, dataset == "OV"),
  LUSC <- filter(df_long, dataset == "LUSC"),
  KIPAN <- filter(df_long, dataset == "KIPAN"),
  KIRP <- filter(df_long, dataset == "KIRP"),
  UCEC <- filter(df_long, dataset == "UCEC")
)

cancertype_boxplots = lapply(cancertype, function(x) {ggplot(x, aes(dataset, expresion_level, col = dataset)) +
    geom_boxplot() + theme(legend.position='none') + labs(x = "", y = "Expression level")})
     

